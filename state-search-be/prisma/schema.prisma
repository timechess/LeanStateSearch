datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = -1
}

model Theorem {
  id          String   @id @default(uuid())
  name        String
  args        String[]
  goal        String
  rev         String
  module      String
  formal_type String   @default("")
}

model FeedBack {
  id         Int      @id @default(autoincrement())
  query      String
  theorem_id String
  relevant   Boolean
  rank       Int
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model Click {
  id         Int      @id @default(autoincrement())
  query      String
  theorem_id String
  rank       Int
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model Call {
  id       Int      @id @default(autoincrement())
  type     Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model LeanNode {
  name               String @id
  const_category     String
  const_type         String
  module             String
  doc_string         String
  informal_name      String
  informal_statement String
}

model LeanEdge {
  id        String @id
  source    String
  target    String
  edge_type String
}
